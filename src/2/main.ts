/**
 * https://projecteuler.net/problem=2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * The first 10 terms will be:
 *      0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

export class Fibonnaci {

    public static fibbonaci(n: number): number {
        if (n === 0) return 0;
        else if (n === 1)  return 1;
        
        else { // Sum of previous two numbers
            return this.fibbonaci(n - 1) + this.fibbonaci(n - 2);
        }
    }
    
    public static fibbonaciSum(max: number): number {
        let sum = 0;
        let term = 0;
        let value = 0;
        let flag = false;

        while (!flag) {
            let isEven = term % 2 === 0;

            // Don't bother calculating if it's not an even term
            value = isEven ? this.fibbonaci(term) : 0;

            if (value <= max) {
                sum += value;
            } else {
                flag = true;
            }

            term++;
        }

        return sum;
    }

}
