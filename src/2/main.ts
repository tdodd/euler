/**
 * https://projecteuler.net/problem=2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * The first 10 terms will be:
 *      0  1  2  3  4  5  6  7   8   9   10
 *      0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

export class Fibonacci {

    public static fibonacci(n: number): number {
        if (n <= 0) return 0;
        else if (n === 1)  return 1;
        
        else { // Sum of previous two numbers
            return this.fibonacci(n - 1) + this.fibonacci(n - 2);
        }
    }

    public static evenFibonacci(n: number, max: number): number {
        let total = 0;
        let prev = 0;
        let current = 1;

        for (let index = 0; index < n; index++) {
            let value = current + prev // Calculate the current term
            if (value < max) {
                prev = current;
                current = value;
                total += value % 2 === 0 ? value: 0; // Increase if the current value is even
            }
        }

        return total;
    }
    
}
