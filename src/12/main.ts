/**
 * https://projecteuler.net/problem=12
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * 
 * The first ten terms would be:
 *      1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *      10: 1,2,5,10
 *      15: 1,3,5,15
 *      21: 1,3,7,21
 *      28: 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 */

export class TriangleDivisor {

    public static getDivisors(n: number): number {
        let done = false;
        let res = 0;
        let ctr = 1;
        while (!done) {
            let num = this.getTriangleNumber(ctr);
            let numFactors = this.getNumFactors(num);
            if (numFactors > n) {
                res = num;
                done = true;
            } else {
                ctr++;
            }
        }
        return res;
    }

    private static getTriangleNumber(n: number): number {
        let res = 0;
        for (let i = 0; i <= n; i++) {
            res += i;
        }
        return res;
    }

    private static getNumFactors(n: number): number {
        let numFactors = 1;
        for (let i = 2; i <= n; i++) {
            if (n % i === 0) {
                numFactors++;
            }
        }
        return numFactors;
    }

}
